
service: lead-processor
# app and org for use with dashboard.serverless.com
app: lead-processor
org: kenware

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  profile: bant
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "*"

plugins:
 - serverless-bundle # Package our functions with Webpack
 - serverless-offline
 - serverless-apigw-binary

custom:
  apigwBinary:
    types:
      - '*/*'

functions:
  server:
    handler: handler.server
    events:
      - http:
          path: /
          method: ANY
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Accept
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
      - http:
          path: /{proxy+}
          method: ANY
          cors:
            origin: '*' 
            headers:
              - Content-Type
              - X-Amz-Date
              - Accept
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
  
  inactiveLeadCrone: # Automatically release assignement if the user is Inactive for more than 120sec
    handler: handler.RealeaseInProgressLead
    events:
      - schedule: cron(*/1 * * * ? *)

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: users
    EmailLeadTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: emailLeadId
            AttributeType: S
          - AttributeName: date
            AttributeType: S
          - AttributeName: status
            AttributeType: S
          - AttributeName: resolvingBy
            AttributeType: S
          - AttributeName: resolvedBy
            AttributeType: S
        KeySchema:
          - AttributeName: emailLeadId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: emailLeads
        GlobalSecondaryIndexes:
          - IndexName: EmailLeadTableIndex
            KeySchema:
              - AttributeName: status
                KeyType: HASH
              - AttributeName: date
                KeyType: RANGE
            Projection:
              ProjectionType: 'ALL'
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        
